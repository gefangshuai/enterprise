<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:aop="http://www.springframework.org/schema/aop"
		xmlns:p="http://www.springframework.org/schema/p" 
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:jee="http://www.springframework.org/schema/jee" 
		xmlns:tx="http://www.springframework.org/schema/tx"
		xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
			http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.5.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">

	<!-- 使用annotation 自动注册bean。 -->
	<context:component-scan base-package="com"/>
	
	<!-- 定义Controller文件与URL映射规则 -->
	<!-- 
	<bean class="com.sqds.spring.SpringControllerClassNameHandlerMapping" 
		p:basePackage="com.app.([^\\.].*).web.action,com.app.([^\\.].*).web" 
		p:caseSensitive="true"
	/>
	 -->
	 <!-- 
	 <bean class="com.sqds.spring.ControllerClassNameHandlerMapping" 
		p:basePackage="com.app.permission.web.permission" 
		p:caseSensitive="true"
	/>
	 -->
	 
	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"/>
	 
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="webBindingInitializer">
	        <bean class="com.sqds.spring.SpringBindingInitializer" />
	    </property>	
	</bean>
	
	<!-- 定义异常界面 -->
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="org.springframework.dao.DataAccessException">dataAccessFailure</prop>
				<prop key="org.springframework.transaction.TransactionException">dataAccessFailure</prop>
				<prop key="com.sqds.exception.SqdsException">dataAccessFailure</prop>
			</props>
		</property>
	</bean>
	
	<!-- jsp视图定义 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" p:prefix="/WEB-INF/pages/"	p:suffix=".jsp"/>
	
	<bean id="viewNameTranslator" class="org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator"/>
	
	<!-- i18n国际化文件 -->
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource" p:basename="messages"/>

	<!-- 数据库配置文件，用于提传 ${...}标记 -->
	<context:property-placeholder location="classpath:database.properties"/>

	<!-- C3P0连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
  		<property name="driverClass"><value>${jdbc.driverClassName}</value></property>
  		<property name="jdbcUrl"><value>${jdbc.url}</value></property>		
  		<property name="user"><value>${jdbc.username}</value></property>
  		<property name="password"><value>${jdbc.password}</value></property>
  		<property name="minPoolSize"><value>${jdbc.minPoolSize}</value></property>
  		<property name="maxPoolSize"><value>${jdbc.maxPoolSize}</value></property>
  		<property name="maxIdleTime"><value>${jdbc.maxIdleTime}</value></property>
	</bean>
	
	<!-- 文件上传 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"></bean>
			
	<!-- 事务控制 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager" p:sessionFactory-ref="sessionFactory"/>	

	<!--
		Activates various annotations to be detected in bean classes:
		Spring's @Required and @Autowired, as well as JSR 250's @Resource.
	-->
	<context:annotation-config/>

 	<!-- 使用annotation定义事务 -->
 	<!-- 
	<tx:annotation-driven transaction-manager="transactionManager" />
 	-->
 	<!-- 使用 xml 定义事务，将在service目录下的java文件纳入事务管理--> 	
 	<aop:config>
    	<aop:pointcut id="transactionPointcut" expression="execution(* com.app..service.*.*(..)) || execution(* com.sqds.hibernate.HibernateDao.*(..))"/>
    	<aop:advisor advice-ref="txAdvice" pointcut-ref="transactionPointcut"/>
  	</aop:config>
 	
 	<!-- 定义事务的传播行为 -->
 	<tx:advice id="txAdvice" transaction-manager="transactionManager">
	    <tx:attributes>
			<tx:method name="get*" read-only="true"/>
			<tx:method name="list*" read-only="true"/>
			<tx:method name="find*" read-only="true"/>
			<tx:method name="*"/>
		</tx:attributes>
	</tx:advice>
 		
	<!-- annotation aop 支持 -->	
	<aop:aspectj-autoproxy/>
	
	<!-- 权限过滤器 -->
	<bean id="simplePermissionFilter" class="com.app.permission.web.SimplePermissionFilter"/>
	
	<!-- Hibernate配置 -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan" value="com.app.**.model"/>
        <property name="hibernateProperties">
            <props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.generate_statistics">${hibernate.generate_statistics}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.use_sql_comments">${hibernate.use_sql_comments}</prop>
				<prop key="hibernate.fetch_size">30</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>   
                <prop key="hibernate.cache.configurationResourceName">ehcache.xml</prop>
			</props>
        </property>       
    </bean>
	
			
</beans>